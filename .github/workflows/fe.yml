name: Frontend Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'packages/react-frontend/**'

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_REPOSITORY_FRONTEND: 818363358821.dkr.ecr.us-east-1.amazonaws.com/fe
  ECS_CLUSTER: test
  ECS_SERVICE_FRONTEND: fe
  ECS_TASK_DEFINITION_FRONTEND: fe

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push Docker image
        run: |
          cd packages/react-frontend
          docker build -t react-frontend .
          AWS_ECR_PASSWORD=$(aws ecr get-login-password --region ${{ env.AWS_REGION }})
          echo $AWS_ECR_PASSWORD | docker login --username AWS --password-stdin 818363358821.dkr.ecr.us-east-1.amazonaws.com/fe
          docker tag react-frontend ${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
          docker push ${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}

      - name: Update ECS task definition
        run: |
          TASK_DEFINITION_FRONTEND=$(aws ecs register-task-definition \
            --region ${{ env.AWS_REGION }} \
            --family ${{ env.ECS_TASK_DEFINITION_FRONTEND }} \
            --container-definitions '[
              {
                "name": "frontend",
                "image": "'${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}'",
                "essential": true,
                "memory": 512
              }
            ]' \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text
          )

          echo "TASK_DEFINITION_FRONTEND=$TASK_DEFINITION_FRONTEND" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --region ${{ env.AWS_REGION }} \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE_FRONTEND }} \
            --force-new-deployment
