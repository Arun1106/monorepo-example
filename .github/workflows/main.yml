name: Docker Build and Push

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_REPOSITORY_FRONTEND: 818363358821.dkr.ecr.us-east-1.amazonaws.com/fe
  ECR_REPOSITORY_BACKEND: 818363358821.dkr.ecr.us-east-1.amazonaws.com/be
  ECS_CLUSTER: test
  ECS_SERVICE_FRONTEND: fe
  ECS_SERVICE_BACKEND: be

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Determine changed folder
        id: changed-folder
        run: |
          INITIAL_COMMIT=$(git rev-list --max-parents=0 HEAD)
          if [ -n "${INITIAL_COMMIT}" ]; then
            echo "::set-output name=folder::both"
          else
            CHANGED_FILES=$(git diff --name-only HEAD^..HEAD)
            CHANGED_FRONTEND=$(echo "${CHANGED_FILES}" | grep -E '^react-frontend/')
            CHANGED_BACKEND=$(echo "${CHANGED_FILES}" | grep -E '^express-backend/')

            if [[ -n "${CHANGED_FRONTEND}" ]]; then
              echo "::set-output name=folder::react-frontend"
            elif [[ -n "${CHANGED_BACKEND}" ]]; then
              echo "::set-output name=folder::express-backend"
            else
              echo "::set-output name=folder::"
            fi
          fi

      - name: Build and push Docker image
        run: |
          FOLDER="${{ steps.changed-folder.outputs.folder }}"

          if [ "${FOLDER}" == "react-frontend" ]; then
            cd packages/react-frontend
            docker build -t react-frontend .
            docker tag react-frontend ${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
            docker push ${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
          elif [ "${FOLDER}" == "express-backend" ]; then
            cd packages/express-backend
            docker build -t express-backend .
            docker tag express-backend ${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}
            docker push ${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}
          elif [ "${FOLDER}" == "both" ]; then
            cd packages/react-frontend
            docker build -t react-frontend .
            docker tag react-frontend ${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
            docker push ${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}

            cd ../express-backend
            docker build -t express-backend .
            docker tag express-backend ${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}
            docker push ${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}
          fi

      - name: Configure AWS ECS
        run: |
          echo "AWS_REGION=${{ env.AWS_REGION }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Deploy to ECS frontend
        if: ${{ steps.changed-folder.outputs.folder == 'react-frontend' || steps.changed-folder.outputs.folder == 'both' }}
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_FRONTEND }} --force-new-deployment --image "${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}"

      - name: Deploy to ECS backend
        if: ${{ steps.changed-folder.outputs.folder == 'express-backend' || steps.changed-folder.outputs.folder == 'both' }}
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE_BACKEND }} --force-new-deployment --image "${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}"
